// <auto-generated />
using HRD_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HRD_Api.Migrations
{
    [DbContext(typeof(HRD_DbContext))]
    [Migration("20180722135532_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("HRD_DataLibrary.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cabinet");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Education");

                    b.Property<DateTime>("EmploymentDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Patronymic");

                    b.Property<string>("Phone");

                    b.Property<int>("PositionId");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.FiredEmployee", b =>
                {
                    b.Property<int>("FiredEmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfDismissal");

                    b.Property<bool>("Deleted");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("Reason");

                    b.HasKey("FiredEmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("FiredEmployees");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Holiday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("FinalDate");

                    b.Property<double>("Salary");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Type");

                    b.HasKey("HolidayId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("Duties");

                    b.Property<string>("Name");

                    b.Property<string>("Requirements");

                    b.Property<double>("Salary");

                    b.HasKey("PositionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Resume", b =>
                {
                    b.Property<int>("ResumeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Education");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Institution");

                    b.Property<string>("LastName");

                    b.Property<string>("Patronymic");

                    b.Property<string>("Phone");

                    b.Property<string>("Specialty");

                    b.Property<int>("VacancyId");

                    b.HasKey("ResumeId");

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("Deleted");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("Reason");

                    b.HasKey("RewardId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Vacancy", b =>
                {
                    b.Property<int>("VacancyId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<int>("Number");

                    b.Property<int>("PositionId");

                    b.HasKey("VacancyId");

                    b.HasIndex("PositionId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.WorkedTime", b =>
                {
                    b.Property<int>("WorkedTimeId")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan>("ArrivalTime");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("Deleted");

                    b.Property<int>("EmployeeId");

                    b.Property<TimeSpan>("LeavingTime");

                    b.HasKey("WorkedTimeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkedTimes");
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Employee", b =>
                {
                    b.HasOne("HRD_DataLibrary.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.FiredEmployee", b =>
                {
                    b.HasOne("HRD_DataLibrary.Models.Employee", "Employee")
                        .WithMany("FiredEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Position", b =>
                {
                    b.HasOne("HRD_DataLibrary.Models.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Reward", b =>
                {
                    b.HasOne("HRD_DataLibrary.Models.Employee", "Employee")
                        .WithMany("Rewards")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.Vacancy", b =>
                {
                    b.HasOne("HRD_DataLibrary.Models.Position", "Position")
                        .WithMany("Vacancies")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRD_DataLibrary.Models.WorkedTime", b =>
                {
                    b.HasOne("HRD_DataLibrary.Models.Employee", "Employee")
                        .WithMany("WorkedTime")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
